import discord
from discord.ext import commands
from discord.ui import Button, View
import json
import os
import random
import datetime
import asyncio
from typing import Dict, Optional, List

bot = commands.Bot(command_prefix='+', intents=discord.Intents.all())

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
INVENTORY_FILE = 'inventory.json'
CURRENCY_FILE = 'currency.json'
CASES_FILE = 'cases.json'
ITEMS_PER_PAGE = 5

ALLOWED_ROLE_IDS = [1113130639261179928, 1373964737293058098]  # ID —Ä–æ–ª–µ–π —Å –ø—Ä–∞–≤–∞–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
ADMIN_ROLE_IDS = [1113130639261179928, 1373964737293058098]    # ID –∞–¥–º–∏–Ω—Å–∫–∏—Ö —Ä–æ–ª–µ–π
ITEM_ROLES = {
     "–ö—Ä–∞—Å–Ω–∞—è –ª–∞–±-–∫–∞—Ä—Ç–∞": 1158017931322593290,  # –§–æ—Ä–º–∞—Ç: "–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞": ID_—Ä–æ–ª–∏
    "–ó–µ–ª–µ–Ω–∞—è –ª–∞–±-–∫–∞—Ä—Ç–∞": 1384993037670809610,
    "–ñ–µ–ª—Ç–∞—è –ª–∞–±-–∫–∞—Ä—Ç–∞": 1384993037704237076,
    "–ß–µ—Ä–Ω–∞—è –ª–∞–±-–∫–∞—Ä—Ç–∞": 1384993037738049696,
    "–§–∏–æ–ª–µ—Ç–æ–≤–∞—è –ª–∞–±-–∫–∞—Ä—Ç–∞": 1384993037863620738,
    "–ê–®-12": 1384993878809251870,
    "AXMC": 1384993883363999774,
    "–ú—å—ë–ª–Ω–µ—Ä": 1386090540285694022,
    "ETG-Change": 1386090859539464274,
    "–ö–ª—é—á –æ—Ç –∫–æ—Ç–µ–¥–∂–∞": 1386090860378329302,
    "–î–æ—Å—Ç—É–ø": 1386090860990566510,
    "–ö–ª—é—á 314 –º–µ—á.": 1386090860231528628,
}
STARTING_CURRENCY = {
    "–†—É–±–ª–∏": 100000
}
ITEM_CURRENCY_REWARDS = {
    "–ö–æ—à–µ–ª–µ–∫ —Å —Ä—É–±–ª—è–º–∏": {"–†—É–±–ª–∏": 5000},
    "–î–æ–ª–ª–∞—Ä–æ–≤–∞—è –ø–∞—á–∫–∞": {"–î–æ–ª–ª–∞—Ä—ã": 1000},
    "–ï–≤—Ä–æ –∫—É–ø—é—Ä—ã": {"–ï–≤—Ä–æ": 800},
    "–ó–æ–ª–æ—Ç–æ–π —Å–ª–∏—Ç–æ–∫": {"–†—É–±–ª–∏": 15000, "–î–æ–ª–ª–∞—Ä—ã": 200},
    "–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞": {"–î–æ–ª–ª–∞—Ä—ã": 5000}
}
CURRENCIES = {
    "–†—É–±–ª–∏": "‚ÇΩ",
    "–î–æ–ª–ª–∞—Ä—ã": "$",
    "–ï–≤—Ä–æ": "‚Ç¨"
}
# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
ADMIN_CURRENCY_FILE = 'admin_currency.json'  # –§–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤–∞–ª—é—Ç—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏
ADMIN_CURRENCY_NAME = "–ê–¥–º–∏–Ω-–≤–∞–ª—é—Ç–∞"        # –ù–∞–∑–≤–∞–Ω–∏–µ –≤–∞–ª—é—Ç—ã
ADMIN_CURRENCY_SYMBOL = "‚ö°"                # –°–∏–º–≤–æ–ª –≤–∞–ª—é—Ç—ã

# ID —Ä–æ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –∞–¥–º–∏–Ω-–≤–∞–ª—é—Ç–æ–π
ADMIN_CURRENCY_MANAGER_ROLES = [1113130639261179928, 1373964737293058098]

# ID —Ä–æ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—É—á–∞—é—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é –≤—ã–ø–ª–∞—Ç—É –∏ —Å—É–º–º–∞ –≤—ã–ø–ª–∞—Ç—ã
DAILY_ADMIN_ROLES = {
    1113130639261179928: 100,  # –§–æ—Ä–º–∞—Ç: ID_—Ä–æ–ª–∏: —Å—É–º–º–∞_–≤—ã–ø–ª–∞—Ç—ã
    1373964737293058098: 50
}

# –í—Ä–µ–º—è —Å–ª–µ–¥—É—é—â–µ–π –≤—ã–ø–ª–∞—Ç—ã (–≥–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è)
next_daily_payout = None

ADMIN_PAYOUT_CHANNEL_ID = 1386008000640192552  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π ID –∫–∞–Ω–∞–ª–∞ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π

# --- –°–∏—Å—Ç–µ–º–∞ —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö ---
def load_data(filename: str) -> dict:
    """–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ JSON —Ñ–∞–π–ª–∞"""
    if not os.path.exists(filename):
        return {}
    try:
        with open(filename, 'r', encoding='utf-8') as f:
            return json.load(f)
    except:
        return {}

def save_data(data: dict, filename: str):
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ JSON —Ñ–∞–π–ª"""
    with open(filename, 'w', encoding='utf-8') as f:
        json.dump(data, f, ensure_ascii=False, indent=4)

# --- –°–∏—Å—Ç–µ–º–∞ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è ---
class InventoryView(View):
    def __init__(self, ctx, member, items):
        super().__init__(timeout=60)
        self.ctx = ctx
        self.member = member
        self.items = items
        self.current_page = 0
        self.update_buttons()

    def update_buttons(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã"""
        self.clear_items()
        
        # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤
        start_idx = self.current_page * ITEMS_PER_PAGE
        end_idx = start_idx + ITEMS_PER_PAGE
        
        for i, item in enumerate(self.items[start_idx:end_idx], start_idx):
            # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É —Ç–æ–ª—å–∫–æ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
            if item in ITEM_ROLES or item in ITEM_CURRENCY_REWARDS:
                btn = Button(
                    style=discord.ButtonStyle.green,
                    label=f"–ò—Å–ø. {item[:15]}",
                    custom_id=f"use_{i}"
                )
                btn.callback = lambda interaction, idx=i, it=item: self.use_item(interaction, idx, it)
                self.add_item(btn)
        
        # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ (–µ—Å–ª–∏ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –±–æ–ª—å—à–µ, —á–µ–º –Ω–∞ –æ–¥–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ)
        if len(self.items) > ITEMS_PER_PAGE:
            prev_btn = Button(
                style=discord.ButtonStyle.blurple,
                emoji="‚¨ÖÔ∏è",
                disabled=self.current_page == 0
            )
            prev_btn.callback = self.prev_page
            self.add_item(prev_btn)
            
            page_btn = Button(
                style=discord.ButtonStyle.gray,
                label=f"{self.current_page+1}/{(len(self.items)+ITEMS_PER_PAGE-1)//ITEMS_PER_PAGE}",
                disabled=True
            )
            self.add_item(page_btn)
            
            next_btn = Button(
                style=discord.ButtonStyle.blurple,
                emoji="‚û°Ô∏è",
                disabled=(self.current_page+1)*ITEMS_PER_PAGE >= len(self.items)
            )
            next_btn.callback = self.next_page
            self.add_item(next_btn)

    async def prev_page(self, interaction):
        """–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É"""
        self.current_page -= 1
        self.update_buttons()
        await self.update_message(interaction)

    async def next_page(self, interaction):
        """–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É"""
        self.current_page += 1
        self.update_buttons()
        await self.update_message(interaction)

    async def update_message(self, interaction):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–æ–≤—ã–º embed"""
        embed = self.create_embed()
        await interaction.response.edit_message(embed=embed, view=self)

    def create_embed(self):
        """–°–æ–∑–¥–∞–µ—Ç embed –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è"""
        embed = discord.Embed(
            title=f"üì¶ –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å {self.member.display_name}",
            color=discord.Color.gold()
        )
        
        start_idx = self.current_page * ITEMS_PER_PAGE
        end_idx = start_idx + ITEMS_PER_PAGE
        
        for i, item in enumerate(self.items[start_idx:end_idx], start_idx + 1):
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –ø—Ä–µ–¥–º–µ—Ç–∞
            if item in ITEM_CURRENCY_REWARDS:
                rewards = ITEM_CURRENCY_REWARDS[item]
                desc = "–î–∞–µ—Ç –≤–∞–ª—é—Ç—É: " + ", ".join([f"{amt} {CURRENCIES[curr]}" for curr, amt in rewards.items()])
            elif item in ITEM_ROLES:
                role = self.ctx.guild.get_role(ITEM_ROLES[item])
                desc = f"–î–∞–µ—Ç —Ä–æ–ª—å: {role.mention}" if role else "–î–∞–µ—Ç —Ä–æ–ª—å (–Ω–µ –Ω–∞–π–¥–µ–Ω–∞)"
            else:
                desc = "–ù–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å"
            
            embed.add_field(
                name=f"#{i}: {item}",
                value=desc,
                inline=False
            )
        
        embed.set_footer(text=f"–°—Ç—Ä–∞–Ω–∏—Ü–∞ {self.current_page+1}/{(len(self.items)+ITEMS_PER_PAGE-1)//ITEMS_PER_PAGE} | –í—Å–µ–≥–æ: {len(self.items)}")
        embed.set_thumbnail(url=self.member.display_avatar.url)
        return embed

    async def use_item(self, interaction, item_idx, item):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞"""
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–∞–µ—Ç –ª–∏ –ø—Ä–µ–¥–º–µ—Ç –≤–∞–ª—é—Ç—É
            if item in ITEM_CURRENCY_REWARDS:
                server_id = str(interaction.guild.id)
                user_id = str(interaction.user.id)
                
                # –î–æ–±–∞–≤–ª—è–µ–º –≤–∞–ª—é—Ç—É
                for currency, amount in ITEM_CURRENCY_REWARDS[item].items():
                    CurrencySystem.update_balance(server_id, user_id, currency, amount)
                
                # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å
                inventory = load_data(INVENTORY_FILE)
                if (server_id in inventory and 
                    user_id in inventory[server_id] and 
                    item in inventory[server_id][user_id]):
                    inventory[server_id][user_id].remove(item)
                    save_data(inventory, INVENTORY_FILE)
                    
                    reward_text = ", ".join([f"{amount} {CURRENCIES[currency]}" 
                                          for currency, amount in ITEM_CURRENCY_REWARDS[item].items()])
                    embed = discord.Embed(
                        title="üí∞ –ü–æ–ª—É—á–µ–Ω–∞ –≤–∞–ª—é—Ç–∞!",
                        description=f"–í—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ {item} –∏ –ø–æ–ª—É—á–∏–ª–∏: {reward_text}",
                        color=discord.Color.gold()
                    )
                    await interaction.response.send_message(embed=embed, ephemeral=True)
                    
                    self.items = inventory[server_id][user_id]
                    embed = self.create_embed()
                    await interaction.followup.edit_message(interaction.message.id, embed=embed, view=self)
                    return
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–∞–µ—Ç –ª–∏ –ø—Ä–µ–¥–º–µ—Ç —Ä–æ–ª—å
            if item in ITEM_ROLES:
                role = interaction.guild.get_role(ITEM_ROLES[item])
                if not role:
                    await interaction.response.send_message("‚ùå –†–æ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!", ephemeral=True)
                    return
                
                await self.member.add_roles(role)
                
                # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å
                inventory = load_data(INVENTORY_FILE)
                server_id = str(interaction.guild.id)
                user_id = str(self.member.id)
                
                if (server_id in inventory and 
                    user_id in inventory[server_id] and 
                    item in inventory[server_id][user_id]):
                    inventory[server_id][user_id].remove(item)
                    save_data(inventory, INVENTORY_FILE)
                    
                    embed = discord.Embed(
                        title="üéâ –ü—Ä–µ–¥–º–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω",
                        description=f"–í—ã –ø–æ–ª—É—á–∏–ª–∏ —Ä–æ–ª—å {role.mention}!",
                        color=discord.Color.green()
                    )
                    await interaction.response.send_message(embed=embed, ephemeral=True)
                    
                    self.items = inventory[server_id][user_id]
                    embed = self.create_embed()
                    await interaction.followup.edit_message(interaction.message.id, embed=embed, view=self)
                    return
            
            # –ï—Å–ª–∏ –ø—Ä–µ–¥–º–µ—Ç –Ω–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
            if not interaction.response.is_done():
                await interaction.response.send_message("‚ùå –≠—Ç–æ—Ç –ø—Ä–µ–¥–º–µ—Ç –Ω–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å!", ephemeral=True)
        
        except Exception as e:
            if not interaction.response.is_done():
                await interaction.response.send_message(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}", ephemeral=True)
            else:
                await interaction.followup.send(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}", ephemeral=True)

# --- –ö–æ–º–∞–Ω–¥—ã –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è ---
@bot.command(name="–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å")
async def show_inventory(ctx, member: Optional[discord.Member] = None):
    """–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å"""
    member = member or ctx.author
    inventory = load_data(INVENTORY_FILE)
    server_id = str(ctx.guild.id)
    user_id = str(member.id)
    
    items = inventory.get(server_id, {}).get(user_id, [])
    
    if not items:
        embed = discord.Embed(
            title=f"üì¶ –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å {member.display_name}",
            description="–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø—É—Å—Ç!",
            color=discord.Color.gold()
        )
        return await ctx.send(embed=embed)
    
    view = InventoryView(ctx, member, items)
    embed = view.create_embed()
    await ctx.send(embed=embed, view=view)

@bot.command(name="–¥–æ–±–∞–≤–∏—Ç—å")
@commands.has_any_role(*ALLOWED_ROLE_IDS, *ADMIN_ROLE_IDS)
async def add_item(ctx, member: Optional[discord.Member] = None, *, item: str = None):
    """–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å"""
    if not item:
        return await ctx.send("‚ùå –£–∫–∞–∂–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è!")
    
    member = member or ctx.author
    inventory = load_data(INVENTORY_FILE)
    server_id = str(ctx.guild.id)
    user_id = str(member.id)
    
    if server_id not in inventory:
        inventory[server_id] = {}
    if user_id not in inventory[server_id]:
        inventory[server_id][user_id] = []
    
    inventory[server_id][user_id].append(item)
    save_data(inventory, INVENTORY_FILE)
    
    embed = discord.Embed(
        title="‚úÖ –ü—Ä–µ–¥–º–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω",
        description=f"{member.mention} –ø–æ–ª—É—á–∏–ª: {item}",
        color=discord.Color.green()
    )
    await ctx.send(embed=embed)

@bot.command(name="—É–¥–∞–ª–∏—Ç—å")
@commands.has_any_role(*ALLOWED_ROLE_IDS, *ADMIN_ROLE_IDS)
async def remove_item(ctx, member: Optional[discord.Member] = None, *, item: str = None):
    """–£–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç –∏–∑ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è"""
    if not item:
        return await ctx.send("‚ùå –£–∫–∞–∂–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è!")
    
    member = member or ctx.author
    inventory = load_data(INVENTORY_FILE)
    server_id = str(ctx.guild.id)
    user_id = str(member.id)
    
    if (server_id not in inventory or 
        user_id not in inventory[server_id] or 
        item not in inventory[server_id][user_id]):
        return await ctx.send("‚ùå –ü—Ä–µ–¥–º–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ!")
    
    inventory[server_id][user_id].remove(item)
    save_data(inventory, INVENTORY_FILE)
    
    embed = discord.Embed(
        title="üóëÔ∏è –ü—Ä–µ–¥–º–µ—Ç —É–¥–∞–ª–µ–Ω",
        description=f"–ü—Ä–µ–¥–º–µ—Ç {item} —É–¥–∞–ª–µ–Ω —É {member.mention}",
        color=discord.Color.red()
    )
    await ctx.send(embed=embed)

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
@bot.command(name="–æ—á–∏—Å—Ç–∏—Ç—å")
@commands.has_any_role(*ALLOWED_ROLE_IDS, *ADMIN_ROLE_IDS)
async def clear_inventory(ctx, member: Optional[discord.Member] = None):
    """–û—á–∏—Å—Ç–∏—Ç—å –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)"""
    member = member or ctx.author
    inventory = load_data(INVENTORY_FILE)
    server_id = str(ctx.guild.id)
    user_id = str(member.id)
    
    if server_id not in inventory or user_id not in inventory[server_id]:
        return await ctx.send(f"‚ùå –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å {member.mention} —É–∂–µ –ø—É—Å—Ç!")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è
    items_count = len(inventory[server_id][user_id])
    
    # –û—á–∏—â–∞–µ–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å
    inventory[server_id][user_id] = []
    save_data(inventory, INVENTORY_FILE)
    
    embed = discord.Embed(
        title="üóëÔ∏è –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –æ—á–∏—â–µ–Ω",
        description=f"–£ {member.mention} —É–¥–∞–ª–µ–Ω–æ {items_count} –ø—Ä–µ–¥–º–µ—Ç–æ–≤",
        color=discord.Color.red()
    )
    await ctx.send(embed=embed)

@bot.command(name="–∫–æ–º–∞–Ω–¥—ã")
async def show_commands(ctx):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã"""
    embed = discord.Embed(
        title="üìú –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥",
        description="–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:",
        color=discord.Color.blurple()
    )
    
    # –ö–∞—Ç–µ–≥–æ—Ä–∏—è: –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å
    embed.add_field(
        name="üéí **–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å**",
        value=(
            "`+–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å [@–∏–≥—Ä–æ–∫]` - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å\n"
            "`+–¥–æ–±–∞–≤–∏—Ç—å [@–∏–≥—Ä–æ–∫] <–ø—Ä–µ–¥–º–µ—Ç>` - –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç\n"
            "`+—É–¥–∞–ª–∏—Ç—å [@–∏–≥—Ä–æ–∫] <–ø—Ä–µ–¥–º–µ—Ç>` - –£–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç\n"
            "`+–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å <–ø—Ä–µ–¥–º–µ—Ç>` - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç\n"
            "`+—Ä–ø` - –°–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –∑–∞ –∫–æ—Ç–æ—Ä—ã–µ –≤—ã–¥–∞—é—Ç—Å—è —Ä–æ–ª–∏\n"
            "`+–æ–±–º–µ–Ω @–∏–≥—Ä–æ–∫` - –ù–∞—á–∞—Ç—å –æ–±–º–µ–Ω –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏/–≤–∞–ª—é—Ç–æ–π\n"
            "`+–æ—á–∏—Å—Ç–∏—Ç—å [@–∏–≥—Ä–æ–∫]` - –û—á–∏—Å—Ç–∏—Ç—å –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å (–∞–¥–º–∏–Ω)"
        ),
        inline=False
    )
    
    # –ö–∞—Ç–µ–≥–æ—Ä–∏—è: –í–∞–ª—é—Ç–∞
    embed.add_field(
        name="üí∞ **–í–∞–ª—é—Ç–∞**",
        value=(
            "`+–±–∞–ª–∞–Ω—Å [@–∏–≥—Ä–æ–∫] [–≤–∞–ª—é—Ç–∞]` - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å\n"
            "`+–¥–æ–±–∞–≤–∏—Ç—å–≤–∞–ª—é—Ç—É @–∏–≥—Ä–æ–∫ <–≤–∞–ª—é—Ç–∞> <—Å—É–º–º–∞>` - –í—ã–¥–∞—Ç—å –≤–∞–ª—é—Ç—É (–∞–¥–º–∏–Ω)\n"
            "`+–∑–∞–±—Ä–∞—Ç—å–≤–∞–ª—é—Ç—É [@–∏–≥—Ä–æ–∫] [–≤–∞–ª—é—Ç–∞] <—Å—É–º–º–∞>` - –ó–∞–±—Ä–∞—Ç—å –≤–∞–ª—é—Ç—É (–∞–¥–º–∏–Ω)"
            "`+–ø–µ—Ä–µ–≤–æ–¥ [@–∏–≥—Ä–æ–∫] <–≤–∞–ª—é—Ç–∞> <—Å—É–º–º–∞>` - –ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –≤–∞–ª—é—Ç—É\n"
            "`+—Ç–æ–ø–≤–∞–ª—é—Ç—ã [–≤–∞–ª—é—Ç–∞]` - –¢–æ–ø –∏–≥—Ä–æ–∫–æ–≤ –ø–æ –≤–∞–ª—é—Ç–µ\n"
            "`+—Å—Ç–∞—Ä—Ç–æ–≤–∞—è–≤–∞–ª—é—Ç–∞ [@–∏–≥—Ä–æ–∫]` - –í—ã–¥–∞—á–∞ —Å—Ç–∞—Ä—Ç–æ–≤—ã—Ö –¥–µ–Ω–µ–≥"
        ),
        inline=False
    )
    
    embed.add_field(
        name="üéÅ **–ö–µ–π—Å—ã**",
        value=(
            "`+–¥–æ–±–∞–≤–∏—Ç—å–∫–µ–π—Å <–Ω–∞–∑–≤–∞–Ω–∏–µ> <–≤–∞–ª—é—Ç–∞> <—Å—Ç–æ–∏–º–æ—Å—Ç—å> <–ø—Ä–µ–¥–º–µ—Ç—ã>` - –î–æ–±–∞–≤–∏—Ç—å –∫–µ–π—Å (–∞–¥–º–∏–Ω)\n"
            "`+—É–¥–∞–ª–∏—Ç—å–∫–µ–π—Å <–Ω–∞–∑–≤–∞–Ω–∏–µ>` - –£–¥–∞–ª–∏—Ç—å –∫–µ–π—Å (–∞–¥–º–∏–Ω)\n"
            "`+—Å–ø–∏—Å–æ–∫–∫–µ–π—Å–æ–≤` - –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫–µ–π—Å—ã\n"
            "`+–æ—Ç–∫—Ä—ã—Ç—å–∫–µ–π—Å <–Ω–∞–∑–≤–∞–Ω–∏–µ>` - –û—Ç–∫—Ä—ã—Ç—å –∫–µ–π—Å\n"
            "`+—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Ü–µ–Ω—É <–Ω–∞–∑–≤–∞–Ω–∏–µ> <–≤–∞–ª—é—Ç–∞> <—Å—Ç–æ–∏–º–æ—Å—Ç—å>` - –ò–∑–º–µ–Ω–∏—Ç—å —Ü–µ–Ω—É –∫–µ–π—Å–∞\n"
            "–§–æ—Ä–º–∞—Ç –ø—Ä–µ–¥–º–µ—Ç–æ–≤: \"–ü—Ä–µ–¥–º–µ—Ç1:50, –ü—Ä–µ–¥–º–µ—Ç2:30\""
        ),
        inline=False
    )
    
    # –ö–∞—Ç–µ–≥–æ—Ä–∏—è: –û–±—â–µ–µ
    embed.add_field(
        name="üîß **–û–±—â–µ–µ**",
        value=(
            "`+–∫–æ–º–∞–Ω–¥—ã` - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
            "`+–ø—Ä–æ–≤–µ—Ä–∫–∞` - –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –±–æ—Ç–∞"
        ),
        inline=False
    )
    embed.add_field(
        name="üîß **RP –∫–æ–º–∞–Ω–¥—ã**",
        value=(
            "`+–≤—ã–ø–∞–¥–µ–Ω–∏–µ [—à–∞–Ω—Å] <–ø—Ä–µ–¥–º–µ—Ç>`"
        ),
        inline=False
    )
    
    # –ü–æ–¥–≤–∞–ª —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ –≤–∞–ª—é—Ç
    embed.set_footer(
        text="–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã: " + ", ".join(CURRENCIES.keys()) + 
        "\n–ü—Ä–∏–º–µ—Ä: +–¥–æ–±–∞–≤–∏—Ç—å–≤–∞–ª—é—Ç—É @–ò–≥—Ä–æ–∫ –†—É–±–ª–∏ 100"
    )
    
    await ctx.send(embed=embed)

@bot.command(name="—Ä–æ–ª–µ–≤—ã–µ_–ø—Ä–µ–¥–º–µ—Ç—ã", aliases=["—Ä–ø", "role_items"])
async def show_role_items(ctx):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –¥–∞—é—Ç —Ä–æ–ª–∏ –∏–ª–∏ –≤–∞–ª—é—Ç—É"""
    if not ITEM_ROLES and not ITEM_CURRENCY_REWARDS:
        return await ctx.send("‚ùå –ù–µ—Ç –ø–æ–ª–µ–∑–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ!")
    
    # –°–æ–∑–¥–∞–µ–º embed —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
    items_per_page = 5
    pages = []
    
    # –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã
    all_items = []
    
    # –ü—Ä–µ–¥–º–µ—Ç—ã —Å —Ä–æ–ª—è–º–∏
    for item_name, role_id in ITEM_ROLES.items():
        role = ctx.guild.get_role(role_id)
        role_name = role.mention if role else f"‚ùå –†–æ–ª—å (ID: {role_id}) –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
        all_items.append((item_name, f"–î–∞–µ—Ç —Ä–æ–ª—å: {role_name}"))
    
    # –ü—Ä–µ–¥–º–µ—Ç—ã —Å –≤–∞–ª—é—Ç–æ–π
    for item_name, rewards in ITEM_CURRENCY_REWARDS.items():
        reward_text = ", ".join([f"{amount} {CURRENCIES[currency]}" 
                               for currency, amount in rewards.items()])
        all_items.append((item_name, f"–î–∞–µ—Ç –≤–∞–ª—é—Ç—É: {reward_text}"))
    
    # –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    for i in range(0, len(all_items), items_per_page):
        page_items = all_items[i:i + items_per_page]
        embed = discord.Embed(
            title="üéÅ –ü–æ–ª–µ–∑–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã",
            description="–°–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:",
            color=discord.Color.gold()
        )
        
        for item_name, description in page_items:
            embed.add_field(
                name=f"üîπ {item_name}",
                value=description,
                inline=False
            )
        
        embed.set_footer(text=f"–°—Ç—Ä–∞–Ω–∏—Ü–∞ {len(pages)+1}/{(len(all_items)+items_per_page-1)//items_per_page}")
        pages.append(embed)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    message = await ctx.send(embed=pages[0])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –µ—Å–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü –±–æ–ª—å—à–µ 1
    if len(pages) > 1:
        current_page = 0
        view = View(timeout=60)
        
        # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
        prev_button = Button(style=discord.ButtonStyle.blurple, emoji="‚¨ÖÔ∏è")
        async def prev_callback(interaction):
            nonlocal current_page
            current_page = max(0, current_page - 1)
            await interaction.response.edit_message(embed=pages[current_page])
        prev_button.callback = prev_callback
        
        # –ö–Ω–æ–ø–∫–∞ "–í–ø–µ—Ä–µ–¥"
        next_button = Button(style=discord.ButtonStyle.blurple, emoji="‚û°Ô∏è")
        async def next_callback(interaction):
            nonlocal current_page
            current_page = min(len(pages)-1, current_page + 1)
            await interaction.response.edit_message(embed=pages[current_page])
        next_button.callback = next_callback
        
        view.add_item(prev_button)
        view.add_item(next_button)
        await message.edit(view=view)

# –§–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤–∞–ª—é—Ç—ã
CURRENCY_FILE = 'currency.json'

# –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã
CURRENCIES = {
    "–†—É–±–ª–∏": "‚ÇΩ",
    "–î–æ–ª–ª–∞—Ä—ã": "$",
    "–ï–≤—Ä–æ": "‚Ç¨"
}

class CurrencySystem:
    @staticmethod
    def load_currency() -> Dict[str, Dict[str, Dict[str, int]]]:
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –≤–∞–ª—é—Ç–µ –∏–∑ —Ñ–∞–π–ª–∞"""
        if not os.path.exists(CURRENCY_FILE):
            return {}
        with open(CURRENCY_FILE, 'r', encoding='utf-8') as f:
            return json.load(f)

    @staticmethod
    def save_currency(data: Dict[str, Dict[str, Dict[str, int]]]):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –≤–∞–ª—é—Ç–µ –≤ —Ñ–∞–π–ª"""
        with open(CURRENCY_FILE, 'w', encoding='utf-8') as f:
            json.dump(data, f, ensure_ascii=False, indent=4)

    @staticmethod
    def get_balance(server_id: str, user_id: str, currency: str) -> int:
        """–ü–æ–ª—É—á–∞–µ—Ç –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –≤–∞–ª—é—Ç–µ"""
        data = CurrencySystem.load_currency()
        return data.get(server_id, {}).get(user_id, {}).get(currency, 0)

    @staticmethod
    def update_balance(server_id: str, user_id: str, currency: str, amount: int):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        data = CurrencySystem.load_currency()
        
        if server_id not in data:
            data[server_id] = {}
        if user_id not in data[server_id]:
            data[server_id][user_id] = {}
        
        current = data[server_id][user_id].get(currency, 0)
        data[server_id][user_id][currency] = max(0, current + amount)
        CurrencySystem.save_currency(data)

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≤–∞–ª—é—Ç–æ–π
@bot.command(name="–±–∞–ª–∞–Ω—Å")
async def balance(ctx, member: Optional[discord.Member] = None, currency: Optional[str] = None):
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å"""
    target = member or ctx.author
    server_id = str(ctx.guild.id)
    user_id = str(target.id)
    
    embed = discord.Embed(
        title=f"üí∞ –ë–∞–ª–∞–Ω—Å {target.display_name}",
        color=discord.Color.gold()
    )
    
    if currency and currency in CURRENCIES:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –≤–∞–ª—é—Ç—ã
        balance = CurrencySystem.get_balance(server_id, user_id, currency)
        embed.add_field(
            name=f"{CURRENCIES[currency]} {currency}",
            value=f"**{balance}**",
            inline=False
        )
    else:
        # –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –≤–∞–ª—é—Ç—ã
        for curr, symbol in CURRENCIES.items():
            balance = CurrencySystem.get_balance(server_id, user_id, curr)
            embed.add_field(
                name=f"{symbol} {curr}",
                value=f"**{balance}**",
                inline=True
            )
    
    embed.set_thumbnail(url=target.display_avatar.url)
    await ctx.send(embed=embed)

@bot.command(name="–¥–æ–±–∞–≤–∏—Ç—å–≤–∞–ª—é—Ç—É")
@commands.has_permissions(administrator=True)
async def add_currency(ctx, member: discord.Member, currency: str, amount: int):
    """–î–æ–±–∞–≤–∏—Ç—å –≤–∞–ª—é—Ç—É (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)"""
    if currency not in CURRENCIES:
        return await ctx.send(f"‚ùå –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã: {', '.join(CURRENCIES.keys())}")
    
    CurrencySystem.update_balance(str(ctx.guild.id), str(member.id), currency, amount)
    
    embed = discord.Embed(
        title="‚úÖ –í–∞–ª—é—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞",
        description=f"{member.mention} –ø–æ–ª—É—á–∏–ª {amount} {CURRENCIES[currency]} {currency}",
        color=discord.Color.green()
    )
    await ctx.send(embed=embed)

@bot.command(name='–∑–∞–±—Ä–∞—Ç—å–≤–∞–ª—é—Ç—É')
@commands.has_any_role(*ALLOWED_ROLE_IDS, *ADMIN_ROLE_IDS)
async def remove_currency(ctx, member: discord.Member, currency: str, amount: int):
    """–ó–∞–±—Ä–∞—Ç—å –≤–∞–ª—é—Ç—É —É –∏–≥—Ä–æ–∫–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)
    –ü—Ä–∏–º–µ—Ä: +–∑–∞–±—Ä–∞—Ç—å–≤–∞–ª—é—Ç—É @–ò–≥—Ä–æ–∫ –†—É–±–ª–∏ 1000
    """
    if currency not in CURRENCIES:
        return await ctx.send(f"‚ùå –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã: {', '.join(CURRENCIES.keys())}")
    
    if amount <= 0:
        return await ctx.send("‚ùå –°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π!")
    
    server_id = str(ctx.guild.id)
    user_id = str(member.id)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ –∏–≥—Ä–æ–∫–∞
    current_balance = CurrencySystem.get_balance(server_id, user_id, currency)
    if current_balance < amount:
        return await ctx.send(f"‚ùå –£ –∏–≥—Ä–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤! –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {current_balance} {CURRENCIES[currency]}")
    
    # –ó–∞–±–∏—Ä–∞–µ–º –≤–∞–ª—é—Ç—É
    CurrencySystem.update_balance(server_id, user_id, currency, -amount)
    
    embed = discord.Embed(
        title="üí∞ –í–∞–ª—é—Ç–∞ –∏–∑—ä—è—Ç–∞",
        description=f"–£ {member.mention} –∏–∑—ä—è—Ç–æ {amount} {CURRENCIES[currency]} {currency}",
        color=discord.Color.red()
    )
    embed.add_field(
        name="–ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å",
        value=f"{CurrencySystem.get_balance(server_id, user_id, currency)} {CURRENCIES[currency]}",
        inline=False
    )
    embed.set_thumbnail(url=member.display_avatar.url)
    
    await ctx.send(embed=embed)

@bot.command(name="–ø–µ—Ä–µ–≤–æ–¥")
async def transfer(ctx, member: discord.Member, currency: str, amount: int):
    """–ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –≤–∞–ª—é—Ç—É –¥—Ä—É–≥–æ–º—É –∏–≥—Ä–æ–∫—É"""
    if currency not in CURRENCIES:
        return await ctx.send(f"‚ùå –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã: {', '.join(CURRENCIES.keys())}")
    
    if amount <= 0:
        return await ctx.send("‚ùå –°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π!")
    
    server_id = str(ctx.guild.id)
    sender_id = str(ctx.author.id)
    receiver_id = str(member.id)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
    sender_balance = CurrencySystem.get_balance(server_id, sender_id, currency)
    if sender_balance < amount:
        return await ctx.send("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞!")
    
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–¥–∞
    CurrencySystem.update_balance(server_id, sender_id, currency, -amount)
    CurrencySystem.update_balance(server_id, receiver_id, currency, amount)
    
    embed = discord.Embed(
        title="üí∏ –ü–µ—Ä–µ–≤–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω",
        description=f"{ctx.author.mention} –ø–µ—Ä–µ–≤–µ–ª {member.mention} {amount} {CURRENCIES[currency]} {currency}",
        color=discord.Color.blue()
    )
    await ctx.send(embed=embed)

@bot.command(name="—Ç–æ–ø–≤–∞–ª—é—Ç—ã")
async def currency_top(ctx, currency: str = "–†—É–±–ª–∏"):
    """–¢–æ–ø –∏–≥—Ä–æ–∫–æ–≤ –ø–æ –≤–∞–ª—é—Ç–µ"""
    if currency not in CURRENCIES:
        return await ctx.send(f"‚ùå –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã: {', '.join(CURRENCIES.keys())}")
    
    data = CurrencySystem.load_currency()
    server_data = data.get(str(ctx.guild.id), {})
    
    # –°–±–æ—Ä –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    top_players = []
    for user_id, currencies in server_data.items():
        if currency in currencies:
            member = ctx.guild.get_member(int(user_id))
            if member:
                top_players.append((member.display_name, currencies[currency]))
    
    top_players.sort(key=lambda x: x[1], reverse=True)
    
    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ embed
    embed = discord.Embed(
        title=f"üèÜ –¢–æ–ø –ø–æ {currency} {CURRENCIES[currency]}",
        color=discord.Color.dark_gold()
    )
    
    for i, (name, amount) in enumerate(top_players[:10], 1):
        embed.add_field(
            name=f"{i}. {name}",
            value=f"{amount} {CURRENCIES[currency]}",
            inline=False
        )
    
    await ctx.send(embed=embed)

@bot.command(name='–≤—ã–ø–∞–¥–µ–Ω–∏–µ')
async def drop_check(ctx, chance: int, *, item_name: str):
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—ã–ø–∞–¥–µ–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞
    –ü—Ä–∏–º–µ—Ä: +–≤—ã–ø–∞–¥–µ–Ω–∏–µ 15 –ê–ª–º–∞–∑
    """
    try:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ —à–∞–Ω—Å–∞
        if chance < 1 or chance > 100:
            await ctx.send("‚ùå –®–∞–Ω—Å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 1 –¥–æ 100%")
            return
        
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ —á–∏—Å–ª–∞
        roll = random.randint(1, 100)
        success = roll <= chance
        
        # –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Å–∏–≤—ã–π embed
        embed = discord.Embed(
            color=discord.Color.gold() if success else discord.Color.dark_grey()
        )
        
        if success:
            embed.title = f"üéâ –í—ã–ø–∞–ª {item_name}!"
            embed.description = f"–í—ã–ø–∞–ª –ø—Ä–µ–¥–º–µ—Ç **{item_name}** —Å —à–∞–Ω—Å–æ–º {chance}%!"
            embed.set_thumbnail(url="https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/160/twitter/282/party-popper_1f389.png")
        else:
            embed.title = f"‚ùå {item_name} –Ω–µ –≤—ã–ø–∞–ª"
            embed.description = f"–ü—Ä–µ–¥–º–µ—Ç **{item_name}** –Ω–µ –≤—ã–ø–∞–ª (—à–∞–Ω—Å {chance}%)"
            embed.set_thumbnail(url="https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/160/twitter/282/cross-mark_274c.png")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –±—Ä–æ—Å–∫–∞
        embed.add_field(
            name="–†–µ–∑—É–ª—å—Ç–∞—Ç –±—Ä–æ—Å–∫–∞",
            value=f"–í—ã–ø–∞–ª–æ —á–∏—Å–ª–æ: {roll}/{chance}",
            inline=False
        )
        
        await ctx.send(embed=embed)
        
    except Exception as e:
        await ctx.send(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")

# –î–æ–±–∞–≤–∏–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è on_member_join
@bot.event
async def on_member_join(member):
    """–í—ã–¥–∞–µ–º —Å—Ç–∞—Ä—Ç–æ–≤—É—é –≤–∞–ª—é—Ç—É –Ω–æ–≤–æ–º—É —É—á–∞—Å—Ç–Ω–∏–∫—É"""
    server_id = str(member.guild.id)
    user_id = str(member.id)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –¥–∞–Ω–Ω—ã–µ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—á—Ç–æ–±—ã –Ω–µ –≤—ã–¥–∞–≤–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ)
    data = CurrencySystem.load_currency()
    if server_id in data and user_id in data[server_id]:
        return  # –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ –µ—Å—Ç—å –∑–∞–ø–∏—Å–∏ –æ –≤–∞–ª—é—Ç–µ
    
    # –í—ã–¥–∞–µ–º —Å—Ç–∞—Ä—Ç–æ–≤—É—é –≤–∞–ª—é—Ç—É
    for currency, amount in STARTING_CURRENCY.items():
        CurrencySystem.update_balance(server_id, user_id, currency, amount)
    
    # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥ –≤ –∫–æ–Ω—Å–æ–ª—å
    print(f"–í—ã–¥–∞–Ω–∞ —Å—Ç–∞—Ä—Ç–æ–≤–∞—è –≤–∞–ª—é—Ç–∞ –Ω–æ–≤–æ–º—É —É—á–∞—Å—Ç–Ω–∏–∫—É: {member.display_name}")

# –¢–∞–∫–∂–µ –¥–æ–±–∞–≤–∏–º –∫–æ–º–∞–Ω–¥—É –¥–ª—è —Ä—É—á–Ω–æ–π –≤—ã–¥–∞—á–∏ —Å—Ç–∞—Ä—Ç–æ–≤–æ–π –≤–∞–ª—é—Ç—ã
@bot.command(name="—Å—Ç–∞—Ä—Ç–æ–≤–∞—è–≤–∞–ª—é—Ç–∞", aliases=["—Å—Ç–∞—Ä—Ç–≤–∞–ª", "startcurrency"])
@commands.has_any_role(*ALLOWED_ROLE_IDS, *ADMIN_ROLE_IDS)
async def give_starting_currency(ctx, member: Optional[discord.Member] = None):
    """–í—ã–¥–∞—Ç—å —Å—Ç–∞—Ä—Ç–æ–≤—É—é –≤–∞–ª—é—Ç—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é (–∞–¥–º–∏–Ω)"""
    member = member or ctx.author
    server_id = str(ctx.guild.id)
    user_id = str(member.id)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –¥–∞–Ω–Ω—ã–µ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    data = CurrencySystem.load_currency()
    if server_id in data and user_id in data[server_id]:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–¥–∞–≤–∞–ª–∞—Å—å –ª–∏ —É–∂–µ —Å—Ç–∞—Ä—Ç–æ–≤–∞—è –≤–∞–ª—é—Ç–∞
        for currency in STARTING_CURRENCY:
            if currency in data[server_id][user_id]:
                return await ctx.send(f"‚ùå {member.mention} —É–∂–µ –ø–æ–ª—É—á–∞–ª —Å—Ç–∞—Ä—Ç–æ–≤—É—é –≤–∞–ª—é—Ç—É!")
    
    # –í—ã–¥–∞–µ–º —Å—Ç–∞—Ä—Ç–æ–≤—É—é –≤–∞–ª—é—Ç—É
    for currency, amount in STARTING_CURRENCY.items():
        CurrencySystem.update_balance(server_id, user_id, currency, amount)
    
    embed = discord.Embed(
        title="üí∞ –°—Ç–∞—Ä—Ç–æ–≤–∞—è –≤–∞–ª—é—Ç–∞ –≤—ã–¥–∞–Ω–∞",
        description=f"{member.mention} –ø–æ–ª—É—á–∏–ª —Å—Ç–∞—Ä—Ç–æ–≤—É—é –≤–∞–ª—é—Ç—É:",
        color=discord.Color.green()
    )
    
    for currency, amount in STARTING_CURRENCY.items():
        embed.add_field(
            name=f"{CURRENCIES[currency]} {currency}",
            value=f"**{amount}**",
            inline=True
        )
    
    await ctx.send(embed=embed)

# –ö–ª–∞—Å—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–µ–π—Å–∞–º–∏
class CaseSystem:
    @staticmethod
    def load_cases():
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∫–µ–π—Å—ã –∏–∑ —Ñ–∞–π–ª–∞"""
        if not os.path.exists(CASES_FILE):
            return {}
        
        try:
            with open(CASES_FILE, 'r', encoding='utf-8') as f:
                data = json.load(f)
                
                # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç –≤ –Ω–æ–≤—ã–π, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
                if isinstance(data, list):
                    new_data = {}
                    for case in data:
                        if isinstance(case, dict) and "name" in case and "items" in case:
                            new_data[case["name"]] = {
                                "items": case["items"],
                                "price": {
                                    "currency": None,
                                    "amount": 0
                                }
                            }
                    if new_data:
                        CaseSystem.save_cases(new_data)
                        return new_data
                    return {}
                
                return data
        except:
            return {}

    @staticmethod
    def save_cases(data):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∫–µ–π—Å—ã –≤ —Ñ–∞–π–ª"""
        with open(CASES_FILE, 'w', encoding='utf-8') as f:
            json.dump(data, f, ensure_ascii=False, indent=4)

    @staticmethod
    def add_case(case_name, items, price_currency=None, price_amount=0):
        """–î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π –∫–µ–π—Å"""
        cases = CaseSystem.load_cases()
        cases[case_name] = {
            "items": items,
            "price": {
                "currency": price_currency,
                "amount": price_amount
            }
        }
        CaseSystem.save_cases(cases)

    @staticmethod
    def remove_case(case_name):
        """–£–¥–∞–ª—è–µ—Ç –∫–µ–π—Å"""
        cases = CaseSystem.load_cases()
        if case_name in cases:
            del cases[case_name]
            CaseSystem.save_cases(cases)
            return True
        return False

    @staticmethod
    def get_random_item(case_name):
        """–ü–æ–ª—É—á–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç –∏–∑ –∫–µ–π—Å–∞"""
        cases = CaseSystem.load_cases()
        if case_name not in cases:
            return None
        
        items = cases[case_name]["items"]
        if not items:
            return None
            
        total_weight = sum(item['chance'] for item in items)
        roll = random.uniform(0, total_weight)
        current = 0
        
        for item in items:
            current += item['chance']
            if roll <= current:
                return item['item']
        return None

    @staticmethod
    def set_case_price(case_name, currency, amount):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ü–µ–Ω—É –∫–µ–π—Å–∞"""
        cases = CaseSystem.load_cases()
        if case_name not in cases:
            return False
        
        cases[case_name]["price"] = {
            "currency": currency,
            "amount": amount
        }
        CaseSystem.save_cases(cases)
        return True

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–µ–π—Å–∞–º–∏
@bot.command(name='–¥–æ–±–∞–≤–∏—Ç—å–∫–µ–π—Å')
@commands.has_any_role(*ALLOWED_ROLE_IDS, *ADMIN_ROLE_IDS)
async def add_case(ctx, case_name: str, price_currency: str = None, price_amount: int = 0, *, items: str):
    """–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –∫–µ–π—Å —Å –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏
    –§–æ—Ä–º–∞—Ç: +–¥–æ–±–∞–≤–∏—Ç—å–∫–µ–π—Å –ù–∞–∑–≤–∞–Ω–∏–µ–ö–µ–π—Å–∞ [–≤–∞–ª—é—Ç–∞] [—Ü–µ–Ω–∞] "–ü—Ä–µ–¥–º–µ—Ç —Å –ø—Ä–æ–±–µ–ª–∞–º–∏":50 "–î—Ä—É–≥–æ–π –ø—Ä–µ–¥–º–µ—Ç":30
    –ü—Ä–∏–º–µ—Ä: +–¥–æ–±–∞–≤–∏—Ç—å–∫–µ–π—Å –û—Ä—É–∂–∏–µ –†—É–±–ª–∏ 1000 "–ê–®-12":30 "AXMC —Å–Ω–∞–π–ø–µ—Ä—Å–∫–∞—è":20
    """
    try:
        # –ï—Å–ª–∏ —Ü–µ–Ω–∞ —É–∫–∞–∑–∞–Ω–∞, –Ω–æ –≤–∞–ª—é—Ç–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞
        if price_amount and not price_currency:
            return await ctx.send("‚ùå –£–∫–∞–∂–∏—Ç–µ –≤–∞–ª—é—Ç—É –¥–ª—è —Ü–µ–Ω—ã –∫–µ–π—Å–∞!")
            
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª—é—Ç—ã, –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω–∞ —Ü–µ–Ω–∞
        if price_amount > 0 and price_currency not in CURRENCIES:
            return await ctx.send(f"‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è –≤–∞–ª—é—Ç–∞. –î–æ—Å—Ç—É–ø–Ω—ã–µ: {', '.join(CURRENCIES.keys())}")

        items_list = []
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å –∫–∞–≤—ã—á–∫–∞–º–∏
        import re
        pattern = r'("[^"]+"|\'[^\']+\'|\S+):(\d+)'
        matches = re.findall(pattern, items)
        
        if not matches:
            return await ctx.send("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ø—Ä–µ–¥–º–µ—Ç–æ–≤. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: \"–ü—Ä–µ–¥–º–µ—Ç —Å –ø—Ä–æ–±–µ–ª–∞–º–∏\":50 –∏–ª–∏ –ü—Ä–µ–¥–º–µ—Ç:30")
        
        for item_match in matches:
            item_name = item_match[0].strip('"\'')  # –£–¥–∞–ª—è–µ–º –∫–∞–≤—ã—á–∫–∏ –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
            try:
                chance_value = int(item_match[1])
                if chance_value <= 0:
                    await ctx.send(f"‚ùå –®–∞–Ω—Å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º: `{item_match[0]}:{item_match[1]}`")
                    return
                
                items_list.append({
                    'item': item_name,
                    'chance': chance_value
                })
            except ValueError:
                await ctx.send(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —à–∞–Ω—Å–∞ –≤ –ø—Ä–µ–¥–º–µ—Ç–µ: `{item_match[0]}:{item_match[1]}`")
                return

        CaseSystem.add_case(case_name, items_list, price_currency, price_amount)
        
        embed = discord.Embed(
            title="‚úÖ –ö–µ–π—Å –¥–æ–±–∞–≤–ª–µ–Ω",
            description=f"–ö–µ–π—Å **{case_name}** —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!",
            color=discord.Color.green()
        )
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ü–µ–Ω—É, –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω–∞
        if price_amount > 0:
            embed.add_field(
                name="üí∞ –¶–µ–Ω–∞",
                value=f"{price_amount} {CURRENCIES[price_currency]} {price_currency}",
                inline=False
            )
        else:
            embed.add_field(
                name="üí∞ –¶–µ–Ω–∞",
                value="–ë–µ—Å–ø–ª–∞—Ç–Ω–æ",
                inline=False
            )
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
        for item in items_list:
            embed.add_field(
                name=f"üîπ {item['item']}",
                value=f"–®–∞–Ω—Å: {item['chance']}%",
                inline=False
            )
            
        await ctx.send(embed=embed)
        
    except Exception as e:
        await ctx.send(
            "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–µ–π—Å–∞. –ü—Ä–∏–º–µ—Ä—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:\n"
            "`+–¥–æ–±–∞–≤–∏—Ç—å–∫–µ–π—Å –û—Ä—É–∂–∏–µ –†—É–±–ª–∏ 1000 \"–ê–®-12\":30 \"AXMC —Å–Ω–∞–π–ø–µ—Ä—Å–∫–∞—è\":20`\n"
            "`+–¥–æ–±–∞–≤–∏—Ç—å–∫–µ–π—Å –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è –î–æ–ª–ª–∞—Ä—ã 500 \"–ö—Ä–∞—Å–Ω–∞—è –∫–∞—Ä—Ç–∞\":40 \"–ó–µ–ª–µ–Ω–∞—è –∫–∞—Ä—Ç–∞\":30`\n"
            f"–û—à–∏–±–∫–∞: {str(e)}"
        )

@bot.command(name='—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Ü–µ–Ω—É')
@commands.has_any_role(*ALLOWED_ROLE_IDS, *ADMIN_ROLE_IDS)
async def set_case_price(ctx, case_name: str, currency: str, amount: int):
    """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ü–µ–Ω—É –∫–µ–π—Å–∞ –≤ –≤–∞–ª—é—Ç–µ"""
    if currency not in CURRENCIES:
        return await ctx.send(f"‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è –≤–∞–ª—é—Ç–∞. –î–æ—Å—Ç—É–ø–Ω—ã–µ: {', '.join(CURRENCIES.keys())}")
    
    if amount < 0:
        return await ctx.send("‚ùå –¶–µ–Ω–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π!")
    
    if CaseSystem.set_case_price(case_name, currency, amount):
        embed = discord.Embed(
            title="‚úÖ –¶–µ–Ω–∞ –∫–µ–π—Å–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞",
            description=f"–ö–µ–π—Å **{case_name}** —Ç–µ–ø–µ—Ä—å —Å—Ç–æ–∏—Ç {amount} {CURRENCIES[currency]} {currency}",
            color=discord.Color.green()
        )
        await ctx.send(embed=embed)
    else:
        await ctx.send(f"‚ùå –ö–µ–π—Å **{case_name}** –Ω–µ –Ω–∞–π–¥–µ–Ω!")

@bot.command(name='—Å–ø–∏—Å–æ–∫–∫–µ–π—Å–æ–≤')
async def list_cases(ctx):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–µ–π—Å–æ–≤ —Å —Ü–µ–Ω–∞–º–∏"""
    cases = CaseSystem.load_cases()
    
    if not cases:
        return await ctx.send("‚ùå –ù–∞ —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–µ–π—Å–æ–≤!")
    
    embed = discord.Embed(
        title="üì¶ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–µ–π—Å—ã",
        color=discord.Color.gold()
    )
    
    for case_name, case_data in cases.items():
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö
        if isinstance(case_data, dict):
            items = case_data.get("items", [])
            price_info = case_data.get("price", {"currency": None, "amount": 0})
        else:
            # –°—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö (—Ç–æ–ª—å–∫–æ —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤)
            items = case_data
            price_info = {"currency": None, "amount": 0}
        
        items_list = "\n".join(f"‚Ä¢ {item['item']} ({item['chance']}%)" for item in items) if items else "–ù–µ—Ç –ø—Ä–µ–¥–º–µ—Ç–æ–≤"
        
        if price_info.get("amount", 0) > 0 and price_info.get("currency") in CURRENCIES:
            price_text = f"{price_info['amount']} {CURRENCIES[price_info['currency']]} {price_info['currency']}"
        else:
            price_text = "–ë–µ—Å–ø–ª–∞—Ç–Ω–æ"
        
        embed.add_field(
            name=f"üî∏ {case_name} - {price_text}",
            value=items_list,
            inline=False
        )
    
    await ctx.send(embed=embed)
@bot.command(name='—É–¥–∞–ª–∏—Ç—å–∫–µ–π—Å')
@commands.has_any_role(*ALLOWED_ROLE_IDS, *ADMIN_ROLE_IDS)
async def remove_case_command(ctx, case_name: str):
    """–£–¥–∞–ª–∏—Ç—å –∫–µ–π—Å"""
    if CaseSystem.remove_case(case_name):
        embed = discord.Embed(
            title="‚úÖ –ö–µ–π—Å —É–¥–∞–ª–µ–Ω",
            description=f"–ö–µ–π—Å **{case_name}** –±—ã–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!",
            color=discord.Color.green()
        )
        await ctx.send(embed=embed)
    else:
        embed = discord.Embed(
            title="‚ùå –û—à–∏–±–∫–∞",
            description=f"–ö–µ–π—Å **{case_name}** –Ω–µ –Ω–∞–π–¥–µ–Ω!",
            color=discord.Color.red()
        )
        await ctx.send(embed=embed)


@bot.command(name='–æ—Ç–∫—Ä—ã—Ç—å–∫–µ–π—Å')
async def open_case(ctx, case_name: str):
    """–û—Ç–∫—Ä—ã—Ç—å –∫–µ–π—Å (–ø–ª–∞—Ç–Ω–æ, –µ—Å–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —Ü–µ–Ω–∞)"""
    cases = CaseSystem.load_cases()
    
    if case_name not in cases:
        return await ctx.send(f"‚ùå –ö–µ–π—Å **{case_name}** –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    
    case_data = cases[case_name]
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –¥–∞–Ω–Ω—ã—Ö
    if isinstance(case_data, dict):
        items = case_data.get("items", [])
        price_info = case_data.get("price", {"currency": None, "amount": 0})
    else:
        items = case_data
        price_info = {"currency": None, "amount": 0}
    
    if not items:
        return await ctx.send(f"‚ùå –ö–µ–π—Å **{case_name}** –ø—É—Å—Ç!")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –ø–ª–∞—Ç–∏—Ç—å –∑–∞ –∫–µ–π—Å
    if price_info.get("amount", 0) > 0 and price_info.get("currency") in CURRENCIES:
        currency = price_info["currency"]
        amount = price_info["amount"]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        server_id = str(ctx.guild.id)
        user_id = str(ctx.author.id)
        balance = CurrencySystem.get_balance(server_id, user_id, currency)
        
        if balance < amount:
            return await ctx.send(
                f"‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤! –î–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–µ–π—Å–∞ –Ω—É–∂–Ω–æ {amount} {CURRENCIES[currency]} {currency}\n"
                f"–í–∞—à –±–∞–ª–∞–Ω—Å: {balance} {CURRENCIES[currency]}"
            )
        
        # –°–Ω–∏–º–∞–µ–º –≤–∞–ª—é—Ç—É
        CurrencySystem.update_balance(server_id, user_id, currency, -amount)
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç
    item = CaseSystem.get_random_item(case_name)
    if not item:
        return await ctx.send("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –∫–µ–π—Å–∞!")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–¥–º–µ—Ç –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å
    inventory = load_data(INVENTORY_FILE)
    server_id = str(ctx.guild.id)
    user_id = str(ctx.author.id)
    
    if server_id not in inventory:
        inventory[server_id] = {}
    if user_id not in inventory[server_id]:
        inventory[server_id][user_id] = []
    
    inventory[server_id][user_id].append(item)
    save_data(inventory, INVENTORY_FILE)
    
    # –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Å–∏–≤—ã–π embed
    embed = discord.Embed(
        title=f"üéâ –í—ã –æ—Ç–∫—Ä—ã–ª–∏ –∫–µ–π—Å {case_name}!",
        description=f"–í–∞–º –≤—ã–ø–∞–ª: **{item}**",
        color=discord.Color.gold()
    )
    
    # –ï—Å–ª–∏ –±—ã–ª–∞ —Ü–µ–Ω–∞, —É–∫–∞–∑—ã–≤–∞–µ–º —ç—Ç–æ
    if price_info.get("amount", 0) > 0 and price_info.get("currency") in CURRENCIES:
        embed.add_field(
            name="üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å",
            value=f"–ü–æ—Ç—Ä–∞—á–µ–Ω–æ: {price_info['amount']} {CURRENCIES[price_info['currency']]} {price_info['currency']}",
            inline=False
        )
    
    # –ï—Å–ª–∏ –ø—Ä–µ–¥–º–µ—Ç –¥–∞–µ—Ç —Ä–æ–ª—å, —É–∫–∞–∑—ã–≤–∞–µ–º —ç—Ç–æ
    if item in ITEM_ROLES:
        role = ctx.guild.get_role(ITEM_ROLES[item])
        if role:
            embed.add_field(
                name="üîπ –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å",
                value=f"–≠—Ç–æ—Ç –ø—Ä–µ–¥–º–µ—Ç –¥–∞–µ—Ç —Ä–æ–ª—å {role.mention}",
                inline=False
            )
    
    embed.set_thumbnail(url="https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/160/twitter/282/package_1f4e6.png")
    embed.set_footer(text=f"–ö–µ–π—Å –æ—Ç–∫—Ä—ã–ª: {ctx.author.display_name}")
    
    await ctx.send(embed=embed)

@bot.command(name='–ø—Ä–æ–≤–µ—Ä–∫–∞')
async def check_bot(ctx):
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –±–æ—Ç–∞"""
    # –°–æ–∑–¥–∞–µ–º embed –¥–ª—è –æ—Ç—á–µ—Ç–∞
    embed = discord.Embed(
        title="üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞",
        description="–ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã...",
        color=discord.Color.blue()
    )
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏—Å—Ç–µ–º—ã –æ–¥–Ω—É –∑–∞ –¥—Ä—É–≥–æ–π
    checks = []
    
    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –¥–∞–Ω–Ω—ã—Ö
    try:
        files_to_check = [INVENTORY_FILE, CURRENCY_FILE, CASES_FILE]
        files_ok = True
        for file in files_to_check:
            if not os.path.exists(file):
                # –ü–æ–ø—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
                with open(file, 'w') as f:
                    json.dump({}, f)
        checks.append("‚úÖ –§–∞–π–ª—ã –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω—ã –∏ —Å–æ–∑–¥–∞–Ω—ã –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏")
    except Exception as e:
        checks.append(f"‚ùå –û—à–∏–±–∫–∞ —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö: {str(e)}")
    
    # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
    try:
        test_data = {"test_server": {"test_user": ["test_item"]}}
        save_data(test_data, INVENTORY_FILE)
        loaded = load_data(INVENTORY_FILE)
        if loaded.get("test_server", {}).get("test_user") == ["test_item"]:
            checks.append("‚úÖ –°–∏—Å—Ç–µ–º–∞ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        else:
            checks.append("‚ùå –û—à–∏–±–∫–∞ –≤ —Å–∏—Å—Ç–µ–º–µ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è: –¥–∞–Ω–Ω—ã–µ –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è/–∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è")
        # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        if "test_server" in loaded:
            del loaded["test_server"]
            save_data(loaded, INVENTORY_FILE)
    except Exception as e:
        checks.append(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Å–∏—Å—Ç–µ–º–µ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è: {str(e)}")
    
    # 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã –≤–∞–ª—é—Ç—ã
    try:
        CurrencySystem.update_balance("test_server", "test_user", "–†—É–±–ª–∏", 1000)
        balance = CurrencySystem.get_balance("test_server", "test_user", "–†—É–±–ª–∏")
        if balance == 1000:
            checks.append("‚úÖ –°–∏—Å—Ç–µ–º–∞ –≤–∞–ª—é—Ç—ã —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        else:
            checks.append("‚ùå –û—à–∏–±–∫–∞ –≤ —Å–∏—Å—Ç–µ–º–µ –≤–∞–ª—é—Ç—ã: –±–∞–ª–∞–Ω—Å –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è")
        # –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        data = CurrencySystem.load_currency()
        if "test_server" in data:
            del data["test_server"]
            CurrencySystem.save_currency(data)
    except Exception as e:
        checks.append(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Å–∏—Å—Ç–µ–º–µ –≤–∞–ª—é—Ç—ã: {str(e)}")
    
    # 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã –∫–µ–π—Å–æ–≤
    try:
        test_case = {
            "items": [{"item": "test_item", "chance": 100}],
            "price": {"currency": "–†—É–±–ª–∏", "amount": 100}
        }
        cases = CaseSystem.load_cases()
        cases["test_case"] = test_case
        CaseSystem.save_cases(cases)
        
        loaded_cases = CaseSystem.load_cases()
        if loaded_cases.get("test_case"):
            checks.append("‚úÖ –°–∏—Å—Ç–µ–º–∞ –∫–µ–π—Å–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        else:
            checks.append("‚ùå –û—à–∏–±–∫–∞ –≤ —Å–∏—Å—Ç–µ–º–µ –∫–µ–π—Å–æ–≤: –¥–∞–Ω–Ω—ã–µ –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è")
        
        # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∫–µ–π—Å
        if "test_case" in loaded_cases:
            del loaded_cases["test_case"]
            CaseSystem.save_cases(loaded_cases)
    except Exception as e:
        checks.append(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Å–∏—Å—Ç–µ–º–µ –∫–µ–π—Å–æ–≤: {str(e)}")
    
    # 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Discord
    try:
        latency = round(bot.latency * 1000)  # –≤ –º—Å
        checks.append(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Discord: –∑–∞–¥–µ—Ä–∂–∫–∞ {latency}–º—Å")
    except Exception as e:
        checks.append(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Discord: {str(e)}")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ embed
    for i, check in enumerate(checks, 1):
        embed.add_field(
            name=f"–ü—Ä–æ–≤–µ—Ä–∫–∞ #{i}",
            value=check,
            inline=False
        )
    
    # –û–±—â–∏–π —Å—Ç–∞—Ç—É—Å
    if all("‚úÖ" in check for check in checks):
        embed.color = discord.Color.green()
        embed.set_footer(text="–í—Å–µ —Å–∏—Å—Ç–µ–º—ã —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ")
    else:
        embed.color = discord.Color.orange()
        embed.set_footer(text="–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –≤ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Å–∏—Å—Ç–µ–º–∞—Ö")
    
    await ctx.send(embed=embed)

class AdminCurrencySystem:
    @staticmethod
    def load_admin_currency() -> Dict[str, Dict[str, int]]:
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –≤–∞–ª—é—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏–∑ —Ñ–∞–π–ª–∞"""
        if not os.path.exists(ADMIN_CURRENCY_FILE):
            return {}
        try:
            with open(ADMIN_CURRENCY_FILE, 'r', encoding='utf-8') as f:
                return json.load(f)
        except:
            return {}

    @staticmethod
    def save_admin_currency(data: Dict[str, Dict[str, int]]):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –≤–∞–ª—é—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ —Ñ–∞–π–ª"""
        with open(ADMIN_CURRENCY_FILE, 'w', encoding='utf-8') as f:
            json.dump(data, f, ensure_ascii=False, indent=4)

    @staticmethod
    def get_balance(server_id: str, user_id: str) -> int:
        """–ü–æ–ª—É—á–∞–µ—Ç –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –∞–¥–º–∏–Ω-–≤–∞–ª—é—Ç–µ"""
        data = AdminCurrencySystem.load_admin_currency()
        return data.get(server_id, {}).get(user_id, 0)

    @staticmethod
    def update_balance(server_id: str, user_id: str, amount: int):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ç–æ–ª—å–∫–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ)"""
        if amount <= 0:
            return
        
        data = AdminCurrencySystem.load_admin_currency()
        
        if server_id not in data:
            data[server_id] = {}
        if user_id not in data[server_id]:
            data[server_id][user_id] = 0
        
        data[server_id][user_id] = max(0, data[server_id][user_id] + amount)
        AdminCurrencySystem.save_admin_currency(data)

    @staticmethod
    async def process_daily_payout(guild: discord.Guild):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –≤—ã–ø–ª–∞—Ç—ã –∞–¥–º–∏–Ω-–≤–∞–ª—é—Ç—ã"""
        global next_daily_payout
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –¥–µ–ª–∞—Ç—å –≤—ã–ø–ª–∞—Ç—É
        now = datetime.datetime.now()
        if next_daily_payout and now < next_daily_payout:
            return
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–ª–µ–¥—É—é—â–µ–µ –≤—Ä–µ–º—è –≤—ã–ø–ª–∞—Ç—ã (—á–µ—Ä–µ–∑ 24 —á–∞—Å–∞)
        next_daily_payout = now + datetime.timedelta(hours=24)
        
        server_id = str(guild.id)
        payout_log = []
        payout_embed = discord.Embed(
            title=f"{ADMIN_CURRENCY_SYMBOL} –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –≤—ã–ø–ª–∞—Ç–∞ {ADMIN_CURRENCY_NAME}",
            color=discord.Color.purple()
        )
        
        for role_id, amount in DAILY_ADMIN_ROLES.items():
            role = guild.get_role(role_id)
            if not role:
                continue
                
            for member in role.members:
                AdminCurrencySystem.update_balance(server_id, str(member.id), amount)
                payout_log.append(f"{member.mention} ({role.name}): +{amount}{ADMIN_CURRENCY_SYMBOL}")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª
        if payout_log:
            payout_embed.description = "\n".join(payout_log)
            payout_embed.set_footer(text=f"–°–ª–µ–¥—É—é—â–∞—è –≤—ã–ø–ª–∞—Ç–∞: {next_daily_payout.strftime('%d.%m.%Y –≤ %H:%M')}")
            
            channel = guild.get_channel(ADMIN_PAYOUT_CHANNEL_ID)
            if channel:
                try:
                    await channel.send(embed=payout_embed)
                except Exception as e:
                    print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≤—ã–ø–ª–∞—Ç–µ: {str(e)}")
            
            # –õ–æ–≥–∏—Ä—É–µ–º –≤—ã–ø–ª–∞—Ç—É –≤ –∫–æ–Ω—Å–æ–ª—å
            print(f"[Admin Currency] –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –≤—ã–ø–ª–∞—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞:\n" + "\n".join(payout_log))

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∞–¥–º–∏–Ω-–≤–∞–ª—é—Ç–æ–π
@bot.command(name='–∞–¥–º–∏–Ω–±–∞–ª–∞–Ω—Å')
async def admin_balance(ctx, member: Optional[discord.Member] = None):
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å –∞–¥–º–∏–Ω-–≤–∞–ª—é—Ç—ã"""
    member = member or ctx.author
    server_id = str(ctx.guild.id)
    user_id = str(member.id)
    
    balance = AdminCurrencySystem.get_balance(server_id, user_id)
    
    embed = discord.Embed(
        title=f"{ADMIN_CURRENCY_SYMBOL} –ë–∞–ª–∞–Ω—Å –∞–¥–º–∏–Ω-–≤–∞–ª—é—Ç—ã {member.display_name}",
        description=f"**{balance} {ADMIN_CURRENCY_NAME}** {ADMIN_CURRENCY_SYMBOL}",
        color=discord.Color.purple()
    )
    await ctx.send(embed=embed)

@bot.command(name='–≤—ã–¥–∞—Ç—å–∞–¥–º–∏–Ω–≤–∞–ª—é—Ç—É')
@commands.has_any_role(*ADMIN_CURRENCY_MANAGER_ROLES)
async def add_admin_currency(ctx, member: discord.Member, amount: int):
    """–í—ã–¥–∞—Ç—å –∞–¥–º–∏–Ω-–≤–∞–ª—é—Ç—É (—Ç–æ–ª—å–∫–æ –¥–ª—è —É–ø—Ä–∞–≤–ª—è—é—â–∏—Ö)"""
    if amount <= 0:
        return await ctx.send("‚ùå –°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π!")
    
    AdminCurrencySystem.update_balance(str(ctx.guild.id), str(member.id), amount)
    
    embed = discord.Embed(
        title="‚úÖ –í–∞–ª—é—Ç–∞ –≤—ã–¥–∞–Ω–∞",
        description=f"{member.mention} –ø–æ–ª—É—á–∏–ª {amount}{ADMIN_CURRENCY_SYMBOL} {ADMIN_CURRENCY_NAME}",
        color=discord.Color.green()
    )
    await ctx.send(embed=embed)

@bot.command(name='—Ç–æ–ø–∞–¥–º–∏–Ω–≤–∞–ª—é—Ç—ã')
async def admin_currency_top(ctx):
    """–¢–æ–ø –∏–≥—Ä–æ–∫–æ–≤ –ø–æ –∞–¥–º–∏–Ω-–≤–∞–ª—é—Ç–µ"""
    data = AdminCurrencySystem.load_admin_currency()
    server_data = data.get(str(ctx.guild.id), {})
    
    # –°–±–æ—Ä –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    top_players = []
    for user_id, amount in server_data.items():
        member = ctx.guild.get_member(int(user_id))
        if member:
            top_players.append((member.display_name, amount))
    
    top_players.sort(key=lambda x: x[1], reverse=True)
    
    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ embed
    embed = discord.Embed(
        title=f"üèÜ –¢–æ–ø –ø–æ {ADMIN_CURRENCY_NAME} {ADMIN_CURRENCY_SYMBOL}",
        color=discord.Color.purple()
    )
    
    for i, (name, amount) in enumerate(top_players[:10], 1):
        embed.add_field(
            name=f"{i}. {name}",
            value=f"{amount}{ADMIN_CURRENCY_SYMBOL}",
            inline=False
        )
    
    await ctx.send(embed=embed)

@bot.command(name='—Å–ª–µ–¥—É—é—â–∞—è–≤—ã–ø–ª–∞—Ç–∞', aliases=['nextpayout'])
async def next_payout(ctx):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≤—Ä–µ–º—è –¥–æ —Å–ª–µ–¥—É—é—â–µ–π –≤—ã–ø–ª–∞—Ç—ã –∞–¥–º–∏–Ω-–≤–∞–ª—é—Ç—ã"""
    global next_daily_payout
    
    if not next_daily_payout:
        # –ï—Å–ª–∏ –≤—ã–ø–ª–∞—Ç–∞ –µ—â–µ –Ω–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏–ª–∞—Å—å, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–ª–µ–¥—É—é—â–µ–µ –≤—Ä–µ–º—è
        now = datetime.datetime.now()
        next_daily_payout = now + datetime.timedelta(hours=24)
        await AdminCurrencySystem.process_daily_payout(ctx.guild)
    
    now = datetime.datetime.now()
    if now >= next_daily_payout:
        embed = discord.Embed(
            title=f"{ADMIN_CURRENCY_SYMBOL} –í—ã–ø–ª–∞—Ç–∞ –∞–¥–º–∏–Ω-–≤–∞–ª—é—Ç—ã",
            description="–°–ª–µ–¥—É—é—â–∞—è –≤—ã–ø–ª–∞—Ç–∞ –¥–æ–ª–∂–Ω–∞ –ø—Ä–æ–∏–∑–æ–π—Ç–∏ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è!",
            color=discord.Color.gold()
        )
    else:
        time_left = next_daily_payout - now
        hours, remainder = divmod(time_left.seconds, 3600)
        minutes, seconds = divmod(remainder, 60)
        
        embed = discord.Embed(
            title=f"{ADMIN_CURRENCY_SYMBOL} –í—Ä–µ–º—è –¥–æ —Å–ª–µ–¥—É—é—â–µ–π –≤—ã–ø–ª–∞—Ç—ã",
            description=f"–°–ª–µ–¥—É—é—â–∞—è –≤—ã–ø–ª–∞—Ç–∞ {ADMIN_CURRENCY_NAME} –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç —á–µ—Ä–µ–∑:",
            color=discord.Color.blue()
        )
        embed.add_field(
            name="–û—Å—Ç–∞–ª–æ—Å—å –≤—Ä–µ–º–µ–Ω–∏:",
            value=f"{time_left.days} –¥–Ω–µ–π, {hours} —á–∞—Å–æ–≤, {minutes} –º–∏–Ω—É—Ç",
            inline=False
        )
        embed.add_field(
            name="–¢–æ—á–Ω–æ–µ –≤—Ä–µ–º—è –≤—ã–ø–ª–∞—Ç—ã:",
            value=next_daily_payout.strftime("%d.%m.%Y –≤ %H:%M"),
            inline=False
        )
    
    await ctx.send(embed=embed)

@bot.command(name='–∞–¥–º–∏–Ω')
@commands.has_any_role(*ADMIN_ROLE_IDS)
async def admin_commands(ctx):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
    embed = discord.Embed(
        title="üõ†Ô∏è –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏",
        description="–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞:",
        color=discord.Color.dark_gold()
    )
    
    # –ö–∞—Ç–µ–≥–æ—Ä–∏—è: –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏
    embed.add_field(
        name="üì¶ **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏**",
        value=(
            "`+–¥–æ–±–∞–≤–∏—Ç—å [@–∏–≥—Ä–æ–∫] <–ø—Ä–µ–¥–º–µ—Ç>` - –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å\n"
            "`+—É–¥–∞–ª–∏—Ç—å [@–∏–≥—Ä–æ–∫] <–ø—Ä–µ–¥–º–µ—Ç>` - –£–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç –∏–∑ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è\n"
            "`+–æ—á–∏—Å—Ç–∏—Ç—å [@–∏–≥—Ä–æ–∫]` - –û—á–∏—Å—Ç–∏—Ç—å –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –∏–≥—Ä–æ–∫–∞\n"
            "`+—Ä–ø` - –°–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤, –¥–∞—é—â–∏—Ö —Ä–æ–ª–∏"
        ),
        inline=False
    )
    
    # –ö–∞—Ç–µ–≥–æ—Ä–∏—è: –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∞–ª—é—Ç–æ–π
    embed.add_field(
        name="üí∞ **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∞–ª—é—Ç–æ–π**",
        value=(
            "`+–¥–æ–±–∞–≤–∏—Ç—å–≤–∞–ª—é—Ç—É @–∏–≥—Ä–æ–∫ <–≤–∞–ª—é—Ç–∞> <—Å—É–º–º–∞>` - –í—ã–¥–∞—Ç—å –≤–∞–ª—é—Ç—É\n"
            "`+–∑–∞–±—Ä–∞—Ç—å–≤–∞–ª—é—Ç—É @–∏–≥—Ä–æ–∫ <–≤–∞–ª—é—Ç–∞> <—Å—É–º–º–∞>` - –ó–∞–±—Ä–∞—Ç—å –≤–∞–ª—é—Ç—É\n"
            "`+—Å—Ç–∞—Ä—Ç–æ–≤–∞—è–≤–∞–ª—é—Ç–∞ [@–∏–≥—Ä–æ–∫]` - –í—ã–¥–∞—Ç—å —Å—Ç–∞—Ä—Ç–æ–≤—É—é –≤–∞–ª—é—Ç—É\n"
            "`+–≤—ã–¥–∞—Ç—å–∞–¥–º–∏–Ω–≤–∞–ª—é—Ç—É @–∏–≥—Ä–æ–∫ <—Å—É–º–º–∞>` - –í—ã–¥–∞—Ç—å –∞–¥–º–∏–Ω-–≤–∞–ª—é—Ç—É\n"
            "`+—Ç–æ–ø–∞–¥–º–∏–Ω–≤–∞–ª—é—Ç—ã` - –¢–æ–ø –ø–æ –∞–¥–º–∏–Ω-–≤–∞–ª—é—Ç–µ"
        ),
        inline=False
    )
    
    # –ö–∞—Ç–µ–≥–æ—Ä–∏—è: –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–µ–π—Å–∞–º–∏
    embed.add_field(
        name="üéÅ **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–µ–π—Å–∞–º–∏**",
        value=(
            "`+–¥–æ–±–∞–≤–∏—Ç—å–∫–µ–π—Å <–Ω–∞–∑–≤–∞–Ω–∏–µ> <–≤–∞–ª—é—Ç–∞> <—Å—Ç–æ–∏–º–æ—Å—Ç—å> <–ø—Ä–µ–¥–º–µ—Ç—ã>` - –°–æ–∑–¥–∞—Ç—å –∫–µ–π—Å\n"
            "`+—É–¥–∞–ª–∏—Ç—å–∫–µ–π—Å <–Ω–∞–∑–≤–∞–Ω–∏–µ>` - –£–¥–∞–ª–∏—Ç—å –∫–µ–π—Å\n"
            "`+—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Ü–µ–Ω—É <–Ω–∞–∑–≤–∞–Ω–∏–µ> <–≤–∞–ª—é—Ç–∞> <—Å—Ç–æ–∏–º–æ—Å—Ç—å>` - –ò–∑–º–µ–Ω–∏—Ç—å —Ü–µ–Ω—É –∫–µ–π—Å–∞\n"
            "`+—Å–ø–∏—Å–æ–∫–∫–µ–π—Å–æ–≤` - –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫–µ–π—Å—ã"
        ),
        inline=False
    )
    
    # –ö–∞—Ç–µ–≥–æ—Ä–∏—è: –°–∏—Å—Ç–µ–º–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
    embed.add_field(
        name="‚öôÔ∏è **–°–∏—Å—Ç–µ–º–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã**",
        value=(
            "`+–ø—Ä–æ–≤–µ—Ä–∫–∞` - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –±–æ—Ç–∞\n"
            "`+—Å–ª–µ–¥—É—é—â–∞—è–≤—ã–ø–ª–∞—Ç–∞` - –í—Ä–µ–º—è –¥–æ —Å–ª–µ–¥—É—é—â–µ–π –≤—ã–ø–ª–∞—Ç—ã –∞–¥–º–∏–Ω-–≤–∞–ª—é—Ç—ã"
        ),
        inline=False
    )
    
    embed.set_footer(text=f"–ó–∞–ø—Ä–æ—à–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º: {ctx.author.display_name}")
    await ctx.send(embed=embed)

@bot.event
async def on_ready():
    print(f'–ë–æ—Ç {bot.user.name} –∑–∞–ø—É—â–µ–Ω!')
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–æ–Ω–æ–≤—É—é –∑–∞–¥–∞—á—É –¥–ª—è –≤—ã–ø–ª–∞—Ç
    bot.loop.create_task(daily_payout_task())

async def daily_payout_task():
    await bot.wait_until_ready()  # –ñ–¥–µ–º, –ø–æ–∫–∞ –±–æ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è
    while not bot.is_closed():
        for guild in bot.guilds:
            await AdminCurrencySystem.process_daily_payout(guild)
        await asyncio.sleep(3600)  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–π —á–∞—Å

# –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –æ–±–º–µ–Ω–∞
class TradeView(View):
    def __init__(self, ctx, initiator: discord.Member, recipient: discord.Member, initiator_items: List[str], recipient_items: List[str], initiator_currency: Dict[str, int], recipient_currency: Dict[str, int]):
        super().__init__(timeout=300)
        self.ctx = ctx
        self.initiator = initiator
        self.recipient = recipient
        self.initiator_items = initiator_items
        self.recipient_items = recipient_items
        self.initiator_currency = initiator_currency
        self.recipient_currency = recipient_currency
        self.confirmations = set()
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
        self.add_item(Button(style=discord.ButtonStyle.green, label="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", custom_id="confirm"))
        self.add_item(Button(style=discord.ButtonStyle.red, label="–û—Ç–º–µ–Ω–∏—Ç—å", custom_id="cancel"))
        
    async def interaction_check(self, interaction: discord.Interaction) -> bool:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –æ—Ç –æ–¥–Ω–æ–≥–æ –∏–∑ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –æ–±–º–µ–Ω–∞
        return interaction.user.id in [self.initiator.id, self.recipient.id]
    
    async def update_embed(self):
        embed = discord.Embed(
            title="üîÅ –û–±–º–µ–Ω –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏",
            description=f"–û–±–º–µ–Ω –º–µ–∂–¥—É {self.initiator.mention} –∏ {self.recipient.mention}",
            color=discord.Color.blue()
        )
        
        # –ü—Ä–µ–¥–º–µ—Ç—ã –∏ –≤–∞–ª—é—Ç–∞ –∏–Ω–∏—Ü–∏–∞—Ç–æ—Ä–∞
        initiator_text = "**–ü—Ä–µ–¥–º–µ—Ç—ã:**\n"
        initiator_text += "\n".join(f"‚Ä¢ {item}" for item in self.initiator_items) if self.initiator_items else "–ù–µ—Ç –ø—Ä–µ–¥–º–µ—Ç–æ–≤"
        
        initiator_text += "\n\n**–í–∞–ª—é—Ç–∞:**\n"
        initiator_text += "\n".join(f"‚Ä¢ {amount} {CURRENCIES[currency]}" for currency, amount in self.initiator_currency.items()) if self.initiator_currency else "–ù–µ—Ç –≤–∞–ª—é—Ç—ã"
        
        # –ü—Ä–µ–¥–º–µ—Ç—ã –∏ –≤–∞–ª—é—Ç–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª—è
        recipient_text = "**–ü—Ä–µ–¥–º–µ—Ç—ã:**\n"
        recipient_text += "\n".join(f"‚Ä¢ {item}" for item in self.recipient_items) if self.recipient_items else "–ù–µ—Ç –ø—Ä–µ–¥–º–µ—Ç–æ–≤"
        
        recipient_text += "\n\n**–í–∞–ª—é—Ç–∞:**\n"
        recipient_text += "\n".join(f"‚Ä¢ {amount} {CURRENCIES[currency]}" for currency, amount in self.recipient_currency.items()) if self.recipient_currency else "–ù–µ—Ç –≤–∞–ª—é—Ç—ã"
        
        embed.add_field(name=f"–û—Ç {self.initiator.display_name}", value=initiator_text, inline=True)
        embed.add_field(name=f"–ö {self.recipient.display_name}", value=recipient_text, inline=True)
        
        # –°—Ç–∞—Ç—É—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        status = []
        if self.initiator.id in self.confirmations:
            status.append(f"{self.initiator.display_name} ‚úÖ")
        else:
            status.append(f"{self.initiator.display_name} ‚ùå")
            
        if self.recipient.id in self.confirmations:
            status.append(f"{self.recipient.display_name} ‚úÖ")
        else:
            status.append(f"{self.recipient.display_name} ‚ùå")
            
        embed.add_field(name="–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è", value="\n".join(status), inline=False)
        
        return embed
    
    @discord.ui.button(style=discord.ButtonStyle.green, label="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", custom_id="confirm")
    async def confirm_callback(self, interaction: discord.Interaction, button: Button):
        self.confirmations.add(interaction.user.id)
        
        if len(self.confirmations) == 2:
            # –û–±–∞ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏ - –≤—ã–ø–æ–ª–Ω—è–µ–º –æ–±–º–µ–Ω
            await self.execute_trade()
            embed = await self.update_embed()
            embed.title = "‚úÖ –û–±–º–µ–Ω –∑–∞–≤–µ—Ä—à–µ–Ω!"
            embed.color = discord.Color.green()
            await interaction.response.edit_message(embed=embed, view=None)
        else:
            # –ñ–¥–µ–º –≤—Ç–æ—Ä–æ–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            embed = await self.update_embed()
            await interaction.response.edit_message(embed=embed)
    
    @discord.ui.button(style=discord.ButtonStyle.red, label="–û—Ç–º–µ–Ω–∏—Ç—å", custom_id="cancel")
    async def cancel_callback(self, interaction: discord.Interaction, button: Button):
        embed = discord.Embed(
            title="‚ùå –û–±–º–µ–Ω –æ—Ç–º–µ–Ω–µ–Ω",
            description=f"{interaction.user.mention} –æ—Ç–º–µ–Ω–∏–ª –æ–±–º–µ–Ω",
            color=discord.Color.red()
        )
        await interaction.response.edit_message(embed=embed, view=None)
        self.stop()
    
    async def execute_trade(self):
        # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä–∏
        inventory = load_data(INVENTORY_FILE)
        server_id = str(self.ctx.guild.id)
        
        # –ò–Ω–∏—Ü–∏–∞—Ç–æ—Ä
        if server_id not in inventory:
            inventory[server_id] = {}
        if str(self.initiator.id) not in inventory[server_id]:
            inventory[server_id][str(self.initiator.id)] = []
        if str(self.recipient.id) not in inventory[server_id]:
            inventory[server_id][str(self.recipient.id)] = []
        
        # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã —É –∏–Ω–∏—Ü–∏–∞—Ç–æ—Ä–∞ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—É—á–∞—Ç–µ–ª—é
        for item in self.initiator_items:
            if item in inventory[server_id][str(self.initiator.id)]:
                inventory[server_id][str(self.initiator.id)].remove(item)
                inventory[server_id][str(self.recipient.id)].append(item)
        
        # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã —É –ø–æ–ª—É—á–∞—Ç–µ–ª—è –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∏–Ω–∏—Ü–∏–∞—Ç–æ—Ä—É
        for item in self.recipient_items:
            if item in inventory[server_id][str(self.recipient.id)]:
                inventory[server_id][str(self.recipient.id)].remove(item)
                inventory[server_id][str(self.initiator.id)].append(item)
        
        save_data(inventory, INVENTORY_FILE)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –≤–∞–ª—é—Ç—É
        for currency, amount in self.initiator_currency.items():
            CurrencySystem.update_balance(server_id, str(self.initiator.id), currency, -amount)
            CurrencySystem.update_balance(server_id, str(self.recipient.id), currency, amount)
            
        for currency, amount in self.recipient_currency.items():
            CurrencySystem.update_balance(server_id, str(self.recipient.id), currency, -amount)
            CurrencySystem.update_balance(server_id, str(self.initiator.id), currency, amount)

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ –æ–±–º–µ–Ω–∞
@bot.command(name='–æ–±–º–µ–Ω')
async def trade(ctx, member: discord.Member):
    """–ù–∞—á–∞—Ç—å –æ–±–º–µ–Ω –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏ —Å –¥—Ä—É–≥–∏–º –∏–≥—Ä–æ–∫–æ–º"""
    if member == ctx.author:
        return await ctx.send("‚ùå –ù–µ–ª—å–∑—è –æ–±–º–µ–Ω–∏–≤–∞—Ç—å—Å—è —Å —Å–∞–º–∏–º —Å–æ–±–æ–π!")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä–∏
    inventory = load_data(INVENTORY_FILE)
    server_id = str(ctx.guild.id)
    
    initiator_items = inventory.get(server_id, {}).get(str(ctx.author.id), [])
    recipient_items = inventory.get(server_id, {}).get(str(member.id), [])
    
    # –°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ–±–º–µ–Ω–∞
    view = TradeView(ctx, ctx.author, member, [], [], {}, {})
    embed = await view.update_embed()
    
    # –°–æ–∑–¥–∞–µ–º View –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
    class TradeSetupView(View):
        def __init__(self, trade_view: TradeView):
            super().__init__(timeout=300)
            self.trade_view = trade_view
            
        @discord.ui.button(label="–í—ã–±—Ä–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ã", style=discord.ButtonStyle.blurple)
        async def select_items(self, interaction: discord.Interaction, button: discord.ui.Button):
            if interaction.user.id not in [self.trade_view.initiator.id, self.trade_view.recipient.id]:
                await interaction.response.send_message("‚ùå –í—ã –Ω–µ —É—á–∞—Å—Ç–Ω–∏–∫ —ç—Ç–æ–≥–æ –æ–±–º–µ–Ω–∞!", ephemeral=True)
                return
                
            # –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
            modal = ItemSelectModal(self.trade_view, interaction.user.id == self.trade_view.initiator.id)
            await interaction.response.send_modal(modal)
            
        @discord.ui.button(label="–í—ã–±—Ä–∞—Ç—å –≤–∞–ª—é—Ç—É", style=discord.ButtonStyle.blurple)
        async def select_currency(self, interaction: discord.Interaction, button: discord.ui.Button):
            if interaction.user.id not in [self.trade_view.initiator.id, self.trade_view.recipient.id]:
                await interaction.response.send_message("‚ùå –í—ã –Ω–µ —É—á–∞—Å—Ç–Ω–∏–∫ —ç—Ç–æ–≥–æ –æ–±–º–µ–Ω–∞!", ephemeral=True)
                return
                
            # –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤–∞–ª—é—Ç—ã
            modal = CurrencySelectModal(self.trade_view, interaction.user.id == self.trade_view.initiator.id)
            await interaction.response.send_modal(modal)
            
        @discord.ui.button(label="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–±–º–µ–Ω", style=discord.ButtonStyle.green)
        async def confirm_trade(self, interaction: discord.Interaction, button: discord.ui.Button):
            if interaction.user.id not in [self.trade_view.initiator.id, self.trade_view.recipient.id]:
                await interaction.response.send_message("‚ùå –í—ã –Ω–µ —É—á–∞—Å—Ç–Ω–∏–∫ —ç—Ç–æ–≥–æ –æ–±–º–µ–Ω–∞!", ephemeral=True)
                return
                
            self.trade_view.confirmations.add(interaction.user.id)
            
            if len(self.trade_view.confirmations) == 2:
                # –û–±–∞ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏ - –≤—ã–ø–æ–ª–Ω—è–µ–º –æ–±–º–µ–Ω
                await self.trade_view.execute_trade()
                embed = await self.trade_view.update_embed()
                embed.title = "‚úÖ –û–±–º–µ–Ω –∑–∞–≤–µ—Ä—à–µ–Ω!"
                embed.color = discord.Color.green()
                await interaction.response.edit_message(embed=embed, view=None)
                self.stop()
            else:
                # –ñ–¥–µ–º –≤—Ç–æ—Ä–æ–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
                embed = await self.trade_view.update_embed()
                await interaction.response.edit_message(embed=embed)
                
        @discord.ui.button(label="–û—Ç–º–µ–Ω–∏—Ç—å –æ–±–º–µ–Ω", style=discord.ButtonStyle.red)
        async def cancel_trade(self, interaction: discord.Interaction, button: discord.ui.Button):
            if interaction.user.id not in [self.trade_view.initiator.id, self.trade_view.recipient.id]:
                await interaction.response.send_message("‚ùå –í—ã –Ω–µ —É—á–∞—Å—Ç–Ω–∏–∫ —ç—Ç–æ–≥–æ –æ–±–º–µ–Ω–∞!", ephemeral=True)
                return
                
            embed = discord.Embed(
                title="‚ùå –û–±–º–µ–Ω –æ—Ç–º–µ–Ω–µ–Ω",
                description=f"{interaction.user.mention} –æ—Ç–º–µ–Ω–∏–ª –æ–±–º–µ–Ω",
                color=discord.Color.red()
            )
            await interaction.response.edit_message(embed=embed, view=None)
            self.stop()
    
    # –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
    class ItemSelectModal(discord.ui.Modal):
        def __init__(self, trade_view: TradeView, is_initiator: bool):
            super().__init__(title="–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç—ã –¥–ª—è –æ–±–º–µ–Ω–∞")
            self.trade_view = trade_view
            self.is_initiator = is_initiator
            
            items = initiator_items if is_initiator else recipient_items
            for i, item in enumerate(items[:5]):  # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ 5 –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã
                self.add_item(discord.ui.TextInput(
                    label=f"–ü—Ä–µ–¥–º–µ—Ç {i+1}",
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ (0 –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è)",
                    default="1",
                    required=False
                ))
                
        async def on_submit(self, interaction: discord.Interaction):
            items = initiator_items if self.is_initiator else recipient_items
            selected_items = []
            
            for i, item in enumerate(items[:5]):
                try:
                    count = int(self.children[i].value or "0")
                    if count > 0 and item in items:
                        selected_items.extend([item] * count)
                except ValueError:
                    pass
                    
            if self.is_initiator:
                self.trade_view.initiator_items = selected_items
            else:
                self.trade_view.recipient_items = selected_items
                
            embed = await self.trade_view.update_embed()
            await interaction.response.edit_message(embed=embed)
    
    # –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤–∞–ª—é—Ç—ã
    class CurrencySelectModal(discord.ui.Modal):
        def __init__(self, trade_view: TradeView, is_initiator: bool):
            super().__init__(title="–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É –¥–ª—è –æ–±–º–µ–Ω–∞")
            self.trade_view = trade_view
            self.is_initiator = is_initiator
            
            for currency in CURRENCIES:
                self.add_item(discord.ui.TextInput(
                    label=f"{currency} ({CURRENCIES[currency]})",
                    placeholder="–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É (0 –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è)",
                    default="0",
                    required=False
                ))
                
        async def on_submit(self, interaction: discord.Interaction):
            currency_dict = {}
            
            for i, currency in enumerate(CURRENCIES):
                try:
                    amount = int(self.children[i].value or "0")
                    if amount > 0:
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å
                        balance = CurrencySystem.get_balance(
                            str(interaction.guild.id),
                            str(interaction.user.id),
                            currency
                        )
                        if balance < amount:
                            await interaction.response.send_message(
                                f"‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ {currency}! –í–∞—à –±–∞–ª–∞–Ω—Å: {balance}",
                                ephemeral=True
                            )
                            return
                        currency_dict[currency] = amount
                except ValueError:
                    pass
                    
            if self.is_initiator:
                self.trade_view.initiator_currency = currency_dict
            else:
                self.trade_view.recipient_currency = currency_dict
                
            embed = await self.trade_view.update_embed()
            await interaction.response.edit_message(embed=embed)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
    setup_view = TradeSetupView(view)
    embed.set_footer(text="–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±–º–µ–Ω–∞")
    await ctx.send(embed=embed, view=setup_view)

# ... (–æ—Å—Ç–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã add_item, remove_item –∏ —Ç.–¥. –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)

bot.run(process.env.TOKEN)  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω
